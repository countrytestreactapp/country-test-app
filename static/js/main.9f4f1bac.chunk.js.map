{"version":3,"sources":["countryDict.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","countryDict","require","Results","id","this","props","correct","href","React","Component","Exam","countryDictClone","JSON","parse","stringify","index","Math","floor","random","Object","keys","length","key","value","state","counter","results","document","getElementById","restart","question","style","display","setState","displayResults","answer","updateCorrect","toString","type","Button","onClick","updateQuestion","bind","variant","size","Welcome","src","className","alt","welcome","exam","App","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9f4f1bac.chunk.js","sourcesContent":["var countryDict = {\n    \"Abu Dhabi (United Arab Emirates)\" : 729,\n    \"Admiralty Islands (Papua New Guinea)\" : 607,\n    \"Afghanistan\" : 267,\n    \"Aitutaki, Cook Islands (New Zealand)\" : 588,\n    \"Ajman (United Arab Emirates)\" : 729,\n    \"Aland Island (Finland)\" : 421,\n    \"Albania\" : 269,\n    \"Alberta (Canada)\" : 349,\n    \"Alderney (Channel Islands) (United Kingdom)\" : 731,\n    \"Algeria\" : 271,\n    \"Alhucemas (Spain)\" : 676,\n    \"Alofi Island (New Caledonia)\" : 586,\n    \"American Samoa, United States (Domestic Mail) See DMM\" : 608,\n    \"Andaman Islands (India)\" : 472,\n    \"Andorra\" : 274,\n    \"Angola\" : 276,\n    \"Anguilla\" : 278,\n    \"Anjouan (Comoros)\" : 369,\n    \"Annobon Island (Equatorial Guinea)\" : 406,\n    \"Antigua (Antigua and Barbuda)\" : 280,\n    \"Antigua and Barbuda\" : 280,\n    \"Argentina\" : 282,\n    \"Armenia\" : 285,\n    \"Aruba\" : 287,\n    \"Ascension\" : 289,\n    \"Astypalaia (Greece)\" : 444,\n    \"Atafu (Samoa)\" : 644,\n    \"Atiu, Cook Islands (New Zealand)\" : 588,\n    \"Australia\" : 290,\n    \"Austria\" : 293,\n    \"Avarua (New Zealand)\" : 588,\n    \"Azerbaijan\" : 296,\n    \"Azores (Portugal)\" : 621,\n    \"Bahamas\" : 299,\n    \"Bahrain\" : 301,\n    \"Balearic Islands (Spain)\" : 676,\n    \"Balochistan (Pakistan)\" : 602,\n    \"Bangladesh\" : 303,\n    \"Banks Island (Vanuatu)\" : 739,\n    \"Barbados\" : 306,\n    \"Barbuda (Antigua and Barbuda)\" : 280,\n    \"Barthelemy (Guadeloupe)\" : 451,\n    \"Belarus\" : 308,\n    \"Belgium\" : 311,\n    \"Belize\" : 314,\n    \"Benin\" : 316,\n    \"Bermuda\" : 318,\n    \"Bhutan\" : 320,\n    \"Bismark Archipelago (Papua New Guinea)\" : 607,\n    \"Bolivia\" : 322,\n    \"Bonaire, Sint Eustatius, and Saba\" : 324,\n    \"Bora Bora (French Polynesia)\" : 429,\n    \"Borneo (Indonesia)\" : 476,\n    \"Bosnia-Herzegovina\" : 326,\n    \"Botswana\" : 328,\n    \"Bougainville (Papua New Guinea)\" : 607,\n    \"Bourbon (Reunion)\" : 625,\n    \"Brazil\" : 330,\n    \"British Columbia (Canada)\" : 349,\n    \"British Guiana (Guyana)\" : 459,\n    \"British Virgin Islands\" : 333,\n    \"Brunei Darussalam\" : 335,\n    \"Buka (Papua New Guinea)\" : 607,\n    \"Bulgaria\" : 337,\n    \"Burkina Faso\" : 339,\n    \"Burma\" : 341,\n    \"Burundi\" : 343,\n    \"Caicos Islands (Turks and Caicos Islands)\" : 720,\n    \"Cambodia\" : 345,\n    \"Cameroon\" : 347,\n    \"Canada\" : 349,\n    \"Canary Islands (Spain)\" : 676,\n    \"Canton Island (Kiribati)\" : 505,\n    \"Cape Verde\" : 353,\n    \"Cayman Islands\" : 355,\n    \"Central African Republic\" : 357,\n    \"Ceuta (Spain)\" : 676,\n    \"Ceylon (Sri Lanka)\" : 679,\n    \"Chad\" : 359,\n    \"Chaferinas Islands (Spain)\" : 676,\n    \"Chalki (Greece)\" : 444,\n    \"Channel Islands (Jersey, Guernsey, Alderney, and Sark) (United Kingdom)\" : 731,\n    \"Chile\" : 361,\n    \"China\" : 363,\n    \"Christiansted, US Virgin Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Christmas Island (Australia)\" : 290,\n    \"Christmas Island (Kiribati)\" : 505,\n    \"Chuuk, Micronesia, United States (Domestic Mail) See DMM\" : 608,\n    \"Cocos Island (Australia)\" : 290,\n    \"Colombia\" : 366,\n    \"Comoros\" : 369,\n    \"Congo, Democratic Republic of the\" : 371,\n    \"Congo, Republic of the\" : 373,\n    \"Cook Islands (New Zealand)\" : 588,\n    \"Corisco Island (Equatorial Guinea)\" : 406,\n    \"Corsica (France)\" : 424,\n    \"Costa Rica\" : 375,\n    \"Cote d’Ivoire\" : 377,\n    \"Crete (Greece)\" : 444,\n    \"Croatia\" : 379,\n    \"Cuba\" : 381,\n    \"Cumino Island (Malta)\" : 555,\n    \"Curacao\" : 383,\n    \"Cyjrenaica (Libya)\" : 530,\n    \"Cyprus\" : 385,\n    \"Czech Republic\" : 387,\n    \"Dahomey (Benin)\" : 316,\n    \"Damao (India)\" : 472,\n    \"Danger Islands (New Zealand)\" : 588,\n    \"Denmark\" : 389,\n    \"Desirade Island (Guadeloupe)\" : 451,\n    \"Diu (India)\" : 472,\n    \"Djibouti\" : 392,\n    \"Dodecanese Islands (Greece)\" : 444,\n    \"Doha (Qatar)\" : 623,\n    \"Dominica\" : 394,\n    \"Dominican Republic\" : 396,\n    \"Dubai (United Arab Emirates)\" : 729,\n    \"East Timor (Timor-Leste)\" : 701,\n    \"Ebeye, Marshall Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Ecuador\" : 398,\n    \"Egypt\" : 401,\n    \"Eire (Ireland)\" : 483,\n    \"El Salvador\" : 404,\n    \"Ellice Islands (Tuvalu)\" : 722,\n    \"Elobey Islands (Equatorial Guinea)\" : 406,\n    \"Enderbury Island (Kiribati)\" : 505,\n    \"England (United Kingdom)\" : 731,\n    \"Equatorial Guinea\" : 406,\n    \"Eritrea\" : 408,\n    \"Estonia\" : 410,\n    \"Eswatini\" : 412,\n    \"Ethiopia\" : 414,\n    \"Fakaofo (Samoa)\" : 644,\n    \"Falkland Islands\" : 416,\n    \"Fanning Island (Kiribati)\" : 505,\n    \"Faroe Islands\" : 417,\n    \"Fernando Po (Equatorial Guinea)\" : 406,\n    \"Fezzan (Libya)\" : 530,\n    \"Fiji\" : 419,\n    \"Finland\" : 421,\n    \"Formosa (Taiwan)\" : 693,\n    \"France\" : 424,\n    \"Frederiksted, US Virgin Islands, United States ,(Domestic Mail) See DMM\" : 608,\n    \"French Guiana\" : 427,\n    \"French Oceania (French Polynesia)\" : 429,\n    \"French Polynesia\" : 429,\n    \"French West Indies (Guadeloupe)\" : 451,\n    \"French West Indies (Martinique)\" : 557,\n    \"Friendly Islands (Tonga)\" : 705,\n    \"Fujairah (United Arab Emirates)\" : 729,\n    \"Futuna (Wallis and Futuna Islands)\" : 748,\n    \"Gabon\" : 431,\n    \"Gambia\" : 433,\n    \"Gambier (French Polynesia)\" : 429,\n    \"Georgia, Republic of\" : 435,\n    \"Germany\" : 437,\n    \"Ghana\" : 440,\n    \"Gibraltar\" : 442,\n    \"Gilbert Islands (Kiribati)\" : 505,\n    \"Goa (India)\" : 472,\n    \"Gozo Island (Malta)\" : 555,\n    \"Grand Comoro (Comoros)\" : 369,\n    \"Great Britain (United Kingdom)\" : 731,\n    \"Greece\" : 444,\n    \"Greenland\" : 447,\n    \"Grenada\" : 449,\n    \"Grenadines (Saint Vincent and the Grenadines)\" : 642,\n    \"Guadeloupe\" : 451,\n    \"Guam, United States (Domestic Mail) See DMM\" : 608,\n    \"Guatemala\" : 453,\n    \"Guernsey (Channel Islands) (United Kingdom)\" : 731,\n    \"Guinea\" : 455,\n    \"Guinea–Bissau\" : 456,\n    \"Guyana\" : 459,\n    \"Hainan Island (China)\" : 363,\n    \"Haiti\" : 461,\n    \"Hashemite Kingdom (Jordan)\" : 497,\n    \"Hervey, Cook Islands (New Zealand)\" : 588,\n    \"Hivaoa (French Polynesia)\" : 429,\n    \"Holland (Netherlands)\" : 583,\n    \"Honduras\" : 464,\n    \"Hong Kong\" : 466,\n    \"Huahine (French Polynesia)\" : 429,\n    \"Huan Island (New Caledonia)\" : 586,\n    \"Hungary\" : 468,\n    \"Iceland\" : 470,\n    \"India\" : 472,\n    \"Indonesia\" : 476,\n    \"Iran\" : 479,\n    \"Iraq\" : 481,\n    \"Ireland\" : 483,\n    \"Irian Barat (Indonesia)\" : 476,\n    \"Isle of Man (United Kingdom)\" : 731,\n    \"Isle of Pines (New Caledonia)\" : 586,\n    \"Isle of Pines, West Indies (Cuba)\" : 381,\n    \"Israel\" : 486,\n    \"Issas (Djibouti)\" : 392,\n    \"Italy\" : 489,\n    \"Ivory Coast (Cote d’Ivoire)\" : 377,\n    \"Jamaica\" : 492,\n    \"Japan\" : 494,\n    \"Jersey (Channel Islands) (United Kingdom)\" : 731,\n    \"Johore (Malaysia)\" : 549,\n    \"Jordan\" : 497,\n    \"Kalymnos (Greece)\" : 444,\n    \"Kampuchea (Cambodia)\" : 345,\n    \"Karpathos (Greece)\" : 444,\n    \"Kassos (Greece)\" : 444,\n    \"Kastellorizon (Greece)\" : 444,\n    \"Kazakhstan\" : 499,\n    \"Kedah (Malaysia)\" : 549,\n    \"Keeling Islands (Australia)\" : 290,\n    \"Kelantan (Malaysia)\" : 549,\n    \"Kenya\" : 502,\n    \"Kingshill, US Virgin Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Kiribati\" : 505,\n    \"Korea, Democratic People’s Republic of(North Korea)\" : 507,\n    \"Korea, Republic of (South Korea)\" : 508,\n    \"Koror (Palau), United States (Domestic Mail) See DMM\" : 608,\n    \"Kos (Greece)\" : 444,\n    \"Kosovo, Republic of\" : 511,\n    \"Kosrae, Micronesia, United States (Domestic Mail) See DMM\" : 608,\n    \"Kowloon (Hong Kong)\" : 466,\n    \"Kuwait\" : 513,\n    \"Kwajalein, Marshall Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Kyrgyzstan\" : 515,\n    \"Labrador (Canada)\" : 349,\n    \"Labuan (Malaysia)\" : 549,\n    \"Laos\" : 518,\n    \"Latvia\" : 521,\n    \"Lebanon\" : 524,\n    \"Leipsos (Greece)\" : 444,\n    \"Leros (Greece)\" : 444,\n    \"Les Saints Island (Guadeloupe)\" : 451,\n    \"Lesotho\" : 526,\n    \"Liberia\" : 528,\n    \"Libya\" : 530,\n    \"Liechtenstein\" : 532,\n    \"Lithuania\" : 535,\n    \"Lord Howe Island (Australia)\" : 290,\n    \"Loyalty Islands (New Caledonia)\" : 586,\n    \"Luxembourg\" : 538,\n    \"Macao\" : 541,\n    \"Macau (Macao)\" : 541,\n    \"Macedonia, Republic of\" : 543,\n    \"Madagascar\" : 545,\n    \"Madeira Islands (Portugal)\" : 621,\n    \"Majuro, Marshall Islands, United States(Domestic Mail) See DMM\" : 608,\n    \"Malacca (Malaysia)\" : 549,\n    \"Malawi\" : 547,\n    \"Malaysia\" : 549,\n    \"Maldives\" : 551,\n    \"Mali\" : 553,\n    \"Malta\" : 555,\n    \"Manahiki (New Zealand)\" : 588,\n    \"Manchuria (China)\" : 363,\n    \"Manitoba (Canada)\" : 349,\n    \"Manua Islands, American Samoa,United States (Domestic Mail) See DMM\" : 608,\n    \"Marie Galante (Guadeloupe)\" : 451,\n    \"Marquesas Islands (French Polynesia)\" : 429,\n    \"Marshall Islands, Republic of the, United States (Domestic Mail) See DMM\" : 608,\n    \"Martinique\" : 557,\n    \"Mauritania\" : 559,\n    \"Mauritius\" : 561,\n    \"Mayotte (France)\" : 424,\n    \"Melilla (Spain)\" : 676,\n    \"Mexico\" : 563,\n    \"Micronesia, Federated States of, United States (Domestic Mail) See DMM\" : 608,\n    \"Miquelon (Saint Pierre and Miquelon)\" : 640,\n    \"Moheli (Comoros)\" : 369,\n    \"Moldova\" : 565,\n    \"Monaco (France)\" : 424,\n    \"Mongolia\" : 567,\n    \"Montenegro\" : 569,\n    \"Montserrat\" : 571,\n    \"Moorea (French Polynesia)\" : 429,\n    \"Morocco\" : 573,\n    \"Mozambique\" : 575,\n    \"Muscat (Oman)\" : 600,\n    \"Myanmar (Burma)\" : 341,\n    \"Namibia\" : 577,\n    \"Nansil Islands (Japan)\" : 494,\n    \"Nauru\" : 579,\n    \"Negri Sembilan (Malaysia)\" : 549,\n    \"Nepal\" : 581,\n    \"Netherlands\" : 583,\n    \"Nevis (Saint Kitts and Nevis)\" : 636,\n    \"New Britain (Papua New Guinea)\" : 607,\n    \"New Brunswick (Canada)\" : 349,\n    \"New Caledonia\" : 586,\n    \"New Hanover (Papua New Guinea)\" : 607,\n    \"New Hebrides (Vanuatu)\" : 739,\n    \"New Ireland (Papua New Guinea)\" : 607,\n    \"New South Wales (Australia)\" : 290,\n    \"New Zealand\" : 588,\n    \"Newfoundland (Canada)\" : 349,\n    \"Nicaragua\" : 591,\n    \"Niger\" : 593,\n    \"Nigeria\" : 595,\n    \"Nissiros (Greece)\" : 444,\n    \"Niue (New Zealand)\" : 588,\n    \"Norfolk Island (Australia)\" : 290,\n    \"North Borneo (Malaysia)\" : 549,\n    \"North Korea (Korea, Democratic People’s Republic of)\" : 507,\n    \"Northern Ireland (United Kingdom)\" : 731,\n    \"Northern Mariana Islands, Commonwealth of,United States (Domestic Mail) See DMM\" : 608,\n    \"Northwest Territory (Canada)\" : 349,\n    \"Norway\" : 597,\n    \"Nova Scotia (Canada)\" : 349,\n    \"Nukahiva (French Polynesia)\" : 429,\n    \"Nukunonu (Samoa)\" : 644,\n    \"Ocean Island (Kiribati)\" : 505,\n    \"Okinawa (Japan)\" : 494,\n    \"Oman\" : 600,\n    \"Ontario (Canada)\" : 349,\n    \"Pago Pago, American Samoa, United States (Domestic Mail) See DMM\" : 608,\n    \"Pahang (Malaysia)\" : 549,\n    \"Pakistan\" : 602,\n    \"Palau, United States (Domestic Mail) See DMM\" : 608,\n    \"Palmerston, Avarua (New Zealand)\" : 588,\n    \"Panama\" : 605,\n    \"Papua New Guinea\" : 607,\n    \"Paraguay\" : 609,\n    \"Parry, Cook Islands (New Zealand)\" : 588,\n    \"Patmos (Greece)\" : 444,\n    \"Pemba (Tanzania)\" : 697,\n    \"Penang (Malaysia)\" : 549,\n    \"Penghu Islands (Taiwan)\" : 693,\n    \"Penon de Velez de la Gomera (Spain)\" : 676,\n    \"Penrhyn, Tongareva (New Zealand)\" : 588,\n    \"Perak (Malaysia)\" : 549,\n    \"Perlis (Malaysia)\" : 549,\n    \"Persia (Iran)\" : 479,\n    \"Peru\" : 611,\n    \"Pescadores Islands (Taiwan)\" : 693,\n    \"Petite Terre (Guadeloupe)\" : 451,\n    \"Philippines\" : 614,\n    \"Pitcairn Island\" : 617,\n    \"Pohnpei, Micronesia, United States (Domestic Mail) See DMM\" : 608,\n    \"Poland\" : 619,\n    \"Portugal\" : 621,\n    \"Prince Edward Island (Canada)\" : 349,\n    \"Puerto Rico, United States (Domestic Mail) See DMM\" : 608,\n    \"Pukapuka (New Zealand)\" : 588,\n    \"Qatar\" : 623,\n    \"Quebec (Canada)\" : 349,\n    \"Queensland (Australia)\" : 290,\n    \"Quemoy (Taiwan)\" : 693,\n    \"Raiatea (French Polynesia)\" : 429,\n    \"Rakaanga (New Zealand)\" : 588,\n    \"Rapa (French Polynesia)\" : 429,\n    \"Rarotonga, Cook Islands (New Zealand)\" : 588,\n    \"Ras al Kaimah (United Arab Emirates)\" : 729,\n    \"Redonda (Antigua and Barbuda)\" : 280,\n    \"Reunion\" : 625,\n    \"Rio Muni (Equatorial Guinea)\" : 406,\n    \"Rodos (Greece)\" : 444,\n    \"Rodrigues (Mauritius)\" : 561,\n    \"Romania\" : 627,\n    \"Rota, Northern Mariana Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Russia\" : 629,\n    \"Rwanda\" : 632,\n    \"Saba (Bonaire, Sint Eustatius, and Saba)\" : 324,\n    \"Sabah (Malaysia)\" : 549,\n    \"Saint Barthelemy (Guadeloupe)\" : 451,\n    \"Saint Bartholomew (Guadeloupe)\" : 451,\n    \"Saint Croix, US Virgin Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Saint Helena\" : 634,\n    \"Saint John, US Virgin Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Saint Kitts and Nevis\" : 636,\n    \"Saint Lucia\" : 638,\n    \"Saint Martin (French) (Guadeloupe)\" : 451,\n    \"Saint Pierre and Miquelon\" : 640,\n    \"Saint Thomas, US Virgin Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Saint Vincent and the Grenadines\" : 642,\n    \"Sainte Marie de Madagascar (Madagascar)\" : 545,\n    \"Saipan, Northern Mariana Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Salvador (El Salvador)\" : 404,\n    \"Samoa\" : 644,\n    \"Samoa, American, United States (Domestic Mail) See DMM\" : 608,\n    \"San Marino\" : 646,\n    \"Santa Cruz Islands (Solomon Islands)\" : 671,\n    \"Sao Tome and Principe\" : 649,\n    \"Sarawak (Malaysia)\" : 549,\n    \"Sark (Channel Islands) ((United Kingdom)\" : 731,\n    \"Saskatchewan (Canada)\" : 349,\n    \"Saudi Arabia\" : 651,\n    \"Savage Island, Niue (New Zealand)\" : 588,\n    \"Savaii Island (Samoa)\" : 644,\n    \"Scotland (United Kingdom)\" : 731,\n    \"Seberang Perai (Malaysia)\" : 549,\n    \"Selangor (Malaysia)\" : 549,\n    \"Senegal\" : 653,\n    \"Serbia, Republic of\" : 655,\n    \"Seychelles\" : 658,\n    \"Sharja (United Arab Emirates)\" : 729,\n    \"Shikoku (Japan)\" : 494,\n    \"Sierra Leone\" : 660,\n    \"Sikkim (India)\" : 472,\n    \"Singapore\" : 662,\n    \"Sint Eustatius (Bonaire, Sint Eustatius, and Saba)\" : 324,\n    \"Sint Maarten (Dutch)\" : 664,\n    \"Slovak Republic (Slovakia)\" : 666,\n    \"Slovenia\" : 669,\n    \"Society Islands (French Polynesia)\" : 429,\n    \"Solomon Islands\" : 671,\n    \"Somali Democratic Republic (Somalia)\" : 673,\n    \"Somalia\" : 673,\n    \"Somaliland (Somalia)\" : 673,\n    \"South Africa\" : 674,\n    \"South Australia (Australia)\" : 290,\n    \"South Georgia (Falkland Islands)\" : 416,\n    \"South Korea (Korea, Republic of)\" : 508,\n    \"Spain\" : 676,\n    \"Spitzbergen (Norway)\" : 597,\n    \"Sri Lanka\" : 679,\n    \"Sudan\" : 681,\n    \"Suriname\" : 683,\n    \"Suwarrow Islands (New Zealand)\" : 588,\n    \"Swain’s Island, American Samoa, United States (Domestic Mail) See DMM\" : 608,\n    \"Swan Islands (Honduras)\" : 464,\n    \"Swaziland (Eswatini)\" : 412,\n    \"Sweden\" : 685,\n    \"Switzerland\" : 688,\n    \"Symi (Greece)\" : 444,\n    \"Syrian Arab Republic (Syria)\" : 691,\n    \"Tahaa (French Polynesia)\" : 429,\n    \"Tahiti (French Polynesia)\" : 429,\n    \"Taiwan\" : 693,\n    \"Tajikistan\" : 695,\n    \"Tanzania\" : 697,\n    \"Tasmania (Australia)\" : 290,\n    \"Tchad (Chad)\" : 359,\n    \"Thailand\" : 699,\n    \"Thursday Island (Australia)\" : 290,\n    \"Tibet (China)\" : 363,\n    \"Tilos (Greece)\" : 444,\n    \"Timor (Indonesia)\" : 476,\n    \"Timor-Leste, Democratic Republic of\" : 701,\n    \"Tinian, Northern Mariana Islands, United States (Domestic Mail) See DMM\" : 608,\n    \"Tobago (Trinidad and Tobago)\" : 707,\n    \"Togo\" : 703,\n    \"Tokelau (New Zealand)\" : 588,\n    \"Tonga\" : 705,\n    \"Tongareva (New Zealand)\" : 588,\n    \"Tori Shima (Japan)\" : 494,\n    \"Torres Island (Vanuatu)\" : 739,\n    \"Trans-Jordan, Hashemite Kingdom (Jordan)\" : 497,\n    \"Transkei (South Africa)\" : 674,\n    \"Trengganu (Malaysia)\" : 549,\n    \"Trinidad and Tobago\" : 707,\n    \"Tripolitania (Libya)\" : 530,\n    \"Tristan da Cunha\" : 709,\n    \"Trucial States (United Arab Emirates)\" : 729,\n    \"Tuamotou (French Polynesia)\" : 429,\n    \"Tubuai (French Polynesia)\" : 429,\n    \"Tunisia\" : 711,\n    \"Turkey\" : 714,\n    \"Turkmenistan\" : 717,\n    \"Turks and Caicos Islands\" : 720,\n    \"Tutuila Island, American Samoa, United States (Domestic Mail) See DMM\" : 608,\n    \"Tuvalu\" : 722,\n    \"Uganda\" : 724,\n    \"Ukraine\" : 726,\n    \"Umm al Quaiwain (United Arab Emirates)\" : 729,\n    \"Umm Said (Qatar)\" : 623,\n    \"United Arab Emirates\" : 729,\n    \"United Kingdom of Great Britain and Northern Ireland\" : 731,\n    \"United Nations, New York, United States (Domestic Mail) See DMM\" : 608,\n    \"Upolu Island (Samoa)\" : 644,\n    \"Uruguay\" : 734,\n    \"Uzbekistan\" : 737,\n    \"Vanuatu\" : 739,\n    \"Vatican City\" : 741,\n    \"Venezuela\" : 743,\n    \"Victoria (Australia)\" : 290,\n    \"Vietnam\" : 745,\n    \"Virgin Islands (British)\" : 333,\n    \"Virgin Islands (US), United States (Domestic Mail) See DMM\" : 608,\n    \"Wales (United Kingdom)\" : 731,\n    \"Wallis and Futuna Islands\" : 748,\n    \"Wellesley, Province (Malaysia)\" : 549,\n    \"West New Guinea (Indonesia)\" : 476,\n    \"Western Australia (Australia)\" : 290,\n    \"Yap, Micronesia, United States (Domestic Mail) See DMM\" : 608,\n    \"Yemen\" : 750,\n    \"Yukon Territory (Canada)\" : 349,\n    \"Zafarani Islands (Spain)\" : 676,\n    \"Zambia\" : 752,\n    \"Zanzibar (Tanzania)\" : 697,\n    \"Zimbabwe\" : 754\n}\n\nmodule.exports = countryDict ;","import React from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nlet countryDict = require('./countryDict');\n\nclass Results extends React.Component {\n  render() {\n    return(\n      <div id=\"results\">\n        <h1> You have completed the test!</h1>\n        <h1> {this.props.correct/20 * 100} % </h1>\n        <h2> You got {this.props.correct} question right out of 20.</h2>\n        <p> \n          cheatsheet: <a href=\"https://pe.usps.com/text/IMM/immctry.htm\" >https://pe.usps.com/text/IMM/immctry.htm</a>\n        </p>\n      </div>\n    );\n  }\n}\n\nclass Exam extends React.Component {\n  constructor(props) {\n    super(props);\n    var countryDictClone = JSON.parse(JSON.stringify(countryDict));\n    //console.log('length' + Object.keys(countryDictClone).length);\n    var index = Math.floor(Math.random() * Object.keys(countryDictClone).length);\n    var key = Object.keys(countryDictClone)[index];\n    var value = countryDictClone[key];\n\n    this.state = {counter : 1,\n                  correct : 0,\n                  index: index,\n                  key: key,\n                  value: value,\n                  countryDictClone: countryDictClone};\n  }\n\n  restart() {\n    var results = document.getElementById(\"results\");\n    var restart = document.getElementById(\"restart\");\n    var question = document.getElementById(\"question\");\n    results.style.display = \"none\";\n    restart.style.display = \"none\";\n    question.style.display = \"block\";\n\n    var countryDictClone = JSON.parse(JSON.stringify(countryDict));\n      //console.log('length2' + Object.keys(countryDictClone).length);\n      var index = Math.floor(Math.random() * Object.keys(countryDictClone).length);\n      var key = Object.keys(countryDictClone)[index];\n      //console.log(key);\n      var value = countryDictClone[key];\n      //console.log(value);\n      document.getElementById(\"answer\").value = '';\n      this.setState({\n        counter : 1,\n        correct : 0,\n        countryDictClone: countryDictClone,\n        index: index,\n        key: key,\n        value: value\n      });\n  }\n\n  updateQuestion() {\n    if (this.state.counter === 21) {\n      this.displayResults();\n    } else {\n      //console.log('counter' + this.state.counter);\n      var answer = document.getElementById(\"answer\").value;\n      //console.log('answer' + answer);\n      var updateCorrect  = this.state.correct;\n      if (answer === this.state.value.toString()) {\n        updateCorrect = this.state.correct + 1;\n      }\n      delete this.state.countryDictClone[this.state.key];\n      var index = Math.floor(Math.random() * Object.keys(this.state.countryDictClone).length);\n      var key = Object.keys(this.state.countryDictClone)[index];\n      //console.log(key);\n      var value = this.state.countryDictClone[key];\n      //console.log(value);\n      document.getElementById(\"answer\").value = '';\n\n      this.setState({\n        counter : this.state.counter + 1,\n        correct : updateCorrect,\n        countryDictClone: this.state.countryDictClone,\n        index: index,\n        key: key,\n        value: value\n      });\n    }\n  }\n\n  displayResults() {\n    var question = document.getElementById(\"question\");\n    var restart = document.getElementById(\"restart\");\n    var results = document.getElementById(\"results\");\n    question.style.display = \"none\";\n    restart.style.display = \"block\";\n    results.style.display = \"block\";\n  }\n\n  render() {\n    return(\n      <div id=\"exam\">\n        <div id=\"question\">\n            <h2> What is the country code for </h2>\n            <h2> {this.state.key} ? </h2>\n            <h2> {this.state.value} </h2>\n            <input id=\"answer\"\n              type=\"text\"\n            /> &nbsp;\n            <Button onClick={this.updateQuestion.bind(this)} variant=\"primary\">Enter</Button>\n        </div>\n\n        <Results correct={this.state.correct}/>\n        \n        <div id=\"restart\">\n          <Button onClick={this.restart.bind(this)} variant=\"primary\" size=\"lg\">Take Again</Button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nfunction Welcome() {\n  function displayExam() {\n    var welcome = document.getElementById(\"welcome\");\n    var exam = document.getElementById(\"exam\");\n    welcome.style.display = \"none\";\n    exam.style.display = \"block\";\n  }\n\n  return (\n    <div id=\"welcome\">\n      <h1> Country Code Test </h1>\n      <img src=\"https://media.giphy.com/media/uRbms0QUTt81q/giphy.gif\" className=\"App-logo\" alt=\"logo\"/>\n      <br/>\n      <br/>\n      <p>\n          <Button onClick={displayExam} variant=\"primary\" size=\"lg\">Get Started</Button>\n      </p>\n    </div>\n\n  );\n}\n\nclass App extends React.Component{\n  render() {\n    return (\n      <div className=\"App\" id=\"container\">\n        <header className=\"App-header\">\n          <Welcome />\n          <Exam />\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}